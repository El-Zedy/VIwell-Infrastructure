apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-deployment-1
  template:
    metadata:
      labels:
        app: nginx-deployment-1
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 3000
          #   initialDelaySeconds: 15
          #   periodSeconds: 30
          #   timeoutSeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 3000
          #   initialDelaySeconds: 15
          #   periodSeconds: 30
          #   timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service-1
spec:
  selector:
    app: nginx-deployment-1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nginx-deployment-1-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: nginx-deployment-1
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              ingress: nginx-ingress-1

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing # internal
    alb.ingress.kubernetes.io/security-groups: sg-033ef4631d8ef7d5c # Created by terraform, And add to the EKS SG to allow traffic
    alb.ingress.kubernetes.io/target-type: instance
  name: nginx-ingress-1
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - backend:
              service:
                name: nginx-service-1
                port:
                  number: 80
            path: /
            pathType: Prefix
